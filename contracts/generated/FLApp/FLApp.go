// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package FLApp

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ChannelAllocation is an auto generated low-level Go binding around an user-defined struct.
type ChannelAllocation struct {
	Assets   []common.Address
	Balances [][]*big.Int
	Locked   []ChannelSubAlloc
}

// ChannelParams is an auto generated low-level Go binding around an user-defined struct.
type ChannelParams struct {
	ChallengeDuration *big.Int
	Nonce             *big.Int
	Participants      []common.Address
	App               common.Address
	LedgerChannel     bool
	VirtualChannel    bool
}

// ChannelState is an auto generated low-level Go binding around an user-defined struct.
type ChannelState struct {
	ChannelID [32]byte
	Version   uint64
	Outcome   ChannelAllocation
	AppData   []byte
	IsFinal   bool
}

// ChannelSubAlloc is an auto generated low-level Go binding around an user-defined struct.
type ChannelSubAlloc struct {
	ID       [32]byte
	Balances []*big.Int
	IndexMap []uint16
}

// FLAppMetaData contains all meta data concerning the FLApp contract.
var FLAppMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"challengeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ledgerChannel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"virtualChannel\",\"type\":\"bool\"}],\"internalType\":\"structChannel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"channelID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"balances\",\"type\":\"uint256[][]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"ID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"indexMap\",\"type\":\"uint16[]\"}],\"internalType\":\"structChannel.SubAlloc[]\",\"name\":\"locked\",\"type\":\"tuple[]\"}],\"internalType\":\"structChannel.Allocation\",\"name\":\"outcome\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"appData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isFinal\",\"type\":\"bool\"}],\"internalType\":\"structChannel.State\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"signerIdx\",\"type\":\"uint256\"}],\"name\":\"validTransition\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50611f04806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630d1feb4f14610030575b600080fd5b61004361003e366004611622565b610045565b005b60026100546040860186611cac565b90501461007c5760405162461bcd60e51b815260040161007390611b8b565b60405180910390fd5b600061008b6060850185611cfa565b60008161009457fe5b919091013560f81c9150508181146100be5760405162461bcd60e51b815260040161007390611a8b565b6100cb6060840184611cfa565b6000816100d457fe5b9091013560f81c6001838101161490506101005760405162461bcd60e51b815260040161007390611b0c565b61010d6060850185611cfa565b600481811061011857fe5b919091013560f81c159050610209576101346060840184611cfa565b600181811061013f57fe5b909101356001600160f81b031916905061015c6060860186611cfa565b600181811061016757fe5b9050013560f81c60f81b6001600160f81b031916146101985760405162461bcd60e51b815260040161007390611c85565b6101a56060840184611cfa565b60028181106101b057fe5b909101356001600160f81b03191690506101cd6060860186611cfa565b60028181106101d857fe5b9050013560f81c60f81b6001600160f81b031916146102095760405162461bcd60e51b815260040161007390611ae5565b60006102186060850185611cfa565b600281811061022357fe5b919091013560f81c915050600580820190828001808201919084010160ff81166102506060890189611cfa565b90501461026f5760405162461bcd60e51b815260040161007390611bbb565b61027c6060880188611cfa565b600281811061028757fe5b919091013560f81c905061029e60608a018a611cfa565b60028181106102a957fe5b919091013560f81c919091111590506102c56060890189611cfa565b60028181106102d057fe5b9050013560f81c60f81b6040516020016102ea91906118d4565b604051602081830303815290604052906103175760405162461bcd60e51b815260040161007391906119d3565b5060ff851661087a5761032d6060890189611cfa565b600481811061033857fe5b909101356001600160f81b03191615801591506103a45750600161035f60608a018a611cfa565b600381811061036a57fe5b60ff92013560f81c929092011690506103866060890189611cfa565b600381811061039157fe5b9050013560f81c60f81b60f81c60ff1614155b156103b260608a018a611cfa565b60038181106103bd57fe5b9091013560f81c60010190506103d660608a018a611cfa565b60038181106103e157fe5b9050013560f81c60f81b6040516020016103fc929190611970565b604051602081830303815290604052906104295760405162461bcd60e51b815260040161007391906119d3565b506104376060880188611cfa565b60ff600587011681811061044757fe5b909101356001600160f81b031916905061046460608a018a611cfa565b60ff600588011681811061047457fe5b909101356001600160f81b03191691909114905061049560608a018a611cfa565b60ff60058801168181106104a557fe5b909101356001600160f81b03191690506104c260608a018a611cfa565b60ff60058901168181106104d257fe5b9050013560f81c60f81b6040516020016104ed9291906116b5565b6040516020818303038152906040529061051a5760405162461bcd60e51b815260040161007391906119d3565b506105f361052b60608a018a611cfa565b6105409160ff87890181169290881691611da0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105829250505060608a018a611cfa565b6105979160ff888a0181169290891691611da0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105d99250505060608c018c611cfa565b60038181106105e457fe5b919091013560f81c9050610ff2565b61060060608a018a611cfa565b8560ff1681811061060d57fe5b909101356001600160f81b031916905061062a60608a018a611cfa565b8660ff1681811061063757fe5b9050013560f81c60f81b60405160200161065292919061178b565b6040516020818303038152906040529061067f5760405162461bcd60e51b815260040161007391906119d3565b506106fc61069060608a018a611cfa565b6106a59160ff86890181169290871691611da0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106e79250505060608a018a611cfa565b6105979160ff878a0181169290881691611da0565b61070960608a018a611cfa565b8460ff1681811061071657fe5b909101356001600160f81b031916905061073360608a018a611cfa565b8560ff1681811061074057fe5b9050013560f81c60f81b60405160200161075b92919061185e565b604051602081830303815290604052906107885760405162461bcd60e51b815260040161007391906119d3565b506107966060890189611cfa565b60048181106107a157fe5b919091013560f81c15905061087a576107bd6060880188611cfa565b6107ca60608b018b611cfa565b60038181106107d557fe5b919091013560f81c860160ff1690508181106107ed57fe5b919091013560f81c151590506108155760405162461bcd60e51b815260040161007390611c17565b6108226060880188611cfa565b61082f60608b018b611cfa565b600381811061083a57fe5b919091013560f81c850160ff16905081811061085257fe5b919091013560f81c1515905061087a5760405162461bcd60e51b815260040161007390611ab5565b8460ff1660011415610c81576108936060880188611cfa565b600381811061089e57fe5b909101356001600160f81b03191690506108bb60608a018a611cfa565b60038181106108c657fe5b9050013560f81c60f81b6001600160f81b031916146108f75760405162461bcd60e51b815260040161007390611a26565b6109046060880188611cfa565b85850160ff1681811061091357fe5b909101356001600160f81b031916905061093060608a018a611cfa565b86860160ff1681811061093f57fe5b909101356001600160f81b03191691909114905061096060608a018a611cfa565b86860160ff1681811061096f57fe5b909101356001600160f81b031916905061098c60608a018a611cfa565b87870160ff1681811061099b57fe5b9050013560f81c60f81b6040516020016109b692919061190f565b604051602081830303815290604052906109e35760405162461bcd60e51b815260040161007391906119d3565b506109f16060880188611cfa565b85840160ff16818110610a0057fe5b909101356001600160f81b0319169050610a1d60608a018a611cfa565b86850160ff16818110610a2c57fe5b909101356001600160f81b031916919091149050610a4d60608a018a611cfa565b86850160ff16818110610a5c57fe5b909101356001600160f81b0319169050610a7960608a018a611cfa565b87860160ff16818110610a8857fe5b9050013560f81c60f81b604051602001610aa3929190611801565b60405160208183030381529060405290610ad05760405162461bcd60e51b815260040161007391906119d3565b50610b8d610ae160608a018a611cfa565b610af591600588810160ff16929091611da0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b379250505060608a018a611cfa565b610b4b91600589810160ff16929091611da0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105d99250505060608b018b611cfa565b610b9a60608a018a611cfa565b8560ff16818110610ba757fe5b909101356001600160f81b0319169050610bc460608a018a611cfa565b8660ff16818110610bd157fe5b9050013560f81c60f81b604051602001610bec929190611715565b60405160208183030381529060405290610c195760405162461bcd60e51b815260040161007391906119d3565b50610c276060880188611cfa565b610c3460608b018b611cfa565b6003818110610c3f57fe5b600592013560f81c9190910160ff169050818110610c5957fe5b919091013560f81c15159050610c815760405162461bcd60e51b815260040161007390611be0565b60008080610cd1610c9560608c018c611cfa565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611081915050565b91945092509050821515610ceb60a08c0160808d01611602565b151514610d0a5760405162461bcd60e51b815260040161007390611b30565b610da4610d1a60408c018c611d3f565b610d249080611cac565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610d639250505060408e018e611d3f565b610d6d9080611cac565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061113f92505050565b610df4610db460408c018c611d3f565b610dc2906040810190611cac565b610dcb91611e16565b610dd860408e018e611d3f565b610de6906040810190611cac565b610def91611e16565b61123a565b6000610e0360408d018d611d3f565b610e11906020810190611cac565b610e1a91611dc8565b90508215610fb657805160018390039067ffffffffffffffff81118015610e4057600080fd5b50604051908082528060200260200182016040528015610e7457816020015b6060815260200190600190039081610e5f5790505b50915060005b8251811015610fb357604080516002808252606082018352909160208301908036833701905050838281518110610ead57fe5b6020908102919091010152610ec560408f018f611d3f565b610ed3906020810190611cac565b82818110610edd57fe5b9050602002810190610eef9190611cac565b6001818110610efa57fe5b905060200201358e8060400190610f119190611d3f565b610f1f906020810190611cac565b83818110610f2957fe5b9050602002810190610f3b9190611cac565b6000818110610f4657fe5b9050602002013501838281518110610f5a57fe5b60200260200101518560ff1681518110610f7057fe5b6020026020010181815250506000838281518110610f8a57fe5b60200260200101518360ff1681518110610fa057fe5b6020908102919091010152600101610e7a565b50505b610fe3610fc660408d018d611d3f565b610fd4906020810190611cac565b610fdd91611dc8565b8261129f565b50505050505050505050505050565b600082518451146110055750600061107a565b60005b8451811015611074578260ff168114156110215761106c565b83818151811061102d57fe5b602001015160f81c60f81b6001600160f81b03191685828151811061104e57fe5b01602001516001600160f81b0319161461106c57600091505061107a565b600101611008565b50600190505b9392505050565b8151600090819081908590600390811061109757fe5b016020015185516001600160f81b031990911690869060029081106110b857fe5b01602001516001600160f81b0319161480156110eb57508451859060029081106110de57fe5b60209101015160f81c6003145b1561112e57603c60ff16858560ff168151811061110457fe5b016020015160f81c1061111f57506001915081905080611138565b50600191508190506000611138565b5060009150819050805b9250925092565b8051825114611195576040805162461bcd60e51b815260206004820152601960248201527f616464726573735b5d3a20756e657175616c206c656e67746800000000000000604482015290519081900360640190fd5b60005b8251811015611235578181815181106111ad57fe5b60200260200101516001600160a01b03168382815181106111ca57fe5b60200260200101516001600160a01b03161461122d576040805162461bcd60e51b815260206004820152601760248201527f616464726573735b5d3a20756e657175616c206974656d000000000000000000604482015290519081900360640190fd5b600101611198565b505050565b805182511461125b5760405162461bcd60e51b815260040161007390611c4e565b60005b82518110156112355761129783828151811061127657fe5b602002602001015183838151811061128a57fe5b6020026020010151611304565b60010161125e565b80518251146112c05760405162461bcd60e51b815260040161007390611b54565b60005b8251811015611235576112fc8382815181106112db57fe5b60200260200101518383815181106112ef57fe5b602002602001015161134d565b6001016112c3565b80518251146113255760405162461bcd60e51b815260040161007390611a5d565b6113378260200151826020015161134d565b61134982604001518260400151611431565b5050565b80518251146113a3576040805162461bcd60e51b815260206004820152601960248201527f75696e743235365b5d3a20756e657175616c206c656e67746800000000000000604482015290519081900360640190fd5b60005b8251811015611235578181815181106113bb57fe5b60200260200101518382815181106113cf57fe5b602002602001015114611429576040805162461bcd60e51b815260206004820152601760248201527f75696e743235365b5d3a20756e657175616c206974656d000000000000000000604482015290519081900360640190fd5b6001016113a6565b8051825114611487576040805162461bcd60e51b815260206004820152601860248201527f75696e7431365b5d3a20756e657175616c206c656e6774680000000000000000604482015290519081900360640190fd5b60005b82518110156112355781818151811061149f57fe5b602002602001015161ffff168382815181106114b757fe5b602002602001015161ffff161461150e576040805162461bcd60e51b815260206004820152601660248201527575696e7431365b5d3a20756e657175616c206974656d60501b604482015290519081900360640190fd5b60010161148a565b600082601f830112611526578081fd5b8135602061153b61153683611d82565b611d5e565b8281528181019085830183850287018401881015611557578586fd5b855b8581101561158457813561ffff81168114611572578788fd5b84529284019290840190600101611559565b5090979650505050505050565b600082601f8301126115a1578081fd5b813560206115b161153683611d82565b82815281810190858301838502870184018810156115cd578586fd5b855b85811015611584578135845292840192908401906001016115cf565b600060a082840312156115fc578081fd5b50919050565b600060208284031215611613578081fd5b8135801515811461107a578182fd5b60008060008060808587031215611637578283fd5b843567ffffffffffffffff8082111561164e578485fd5b9086019060c08289031215611661578485fd5b90945060208601359080821115611676578485fd5b611682888389016115eb565b94506040870135915080821115611697578384fd5b506116a4878288016115eb565b949793965093946060013593505050565b7f6163746f722063616e6e6f74206f7665727269646520776569676874733a20658152661e1c1958dd195960ca1b60208201526001600160f81b03199283166027820152650161033b7ba160d51b60288201529116602e820152602f0190565b7f6163746f722063616e6e6f74206f7665727269646520776569676874206f757481527f736964652063757272656e7420726f756e643a2065787065637465642000000060208201526001600160f81b0319928316603d820152650161033b7ba160d51b603e8201529116604482015260450190565b7f6163746f722063616e6e6f74206f76657272696465206163637572616379206f81527f7574736964652063757272656e7420726f756e643a206578706563746564200060208201526001600160f81b0319928316603f820152650161033b7ba160d51b60408201529116604682015260470190565b7f6163746f722063616e6e6f74206f76657272696465206c6f73733a206578706581526318dd195960e21b60208201526001600160f81b03199283166024820152650161033b7ba160d51b60258201529116602b820152602c0190565b7f6163746f722063616e6e6f74206f76657272696465206c6f7373206f7574736981527f64652063757272656e7420726f756e643a20657870656374656420000000000060208201526001600160f81b0319928316603b820152650161033b7ba160d51b603c8201529116604282015260430190565b7f726f756e64496e646578206f7574206f6620626f756e64733a2000000000000081526001600160f81b031991909116601a820152601b0190565b7f6163746f722063616e6e6f74206f766572726964652061636375726163793a20815267195e1c1958dd195960c21b60208201526001600160f81b03199283166028820152650161033b7ba160d51b60298201529116602f82015260300190565b7f6163746f72206d75737420696e6372656d656e7420726f756e643a2065787065815264031ba32b2160dd1b602082015260f89290921b6001600160f81b03199081166025840152650161033b7ba160d51b602684015216602c820152602d0190565b6000602080835283518082850152825b818110156119ff578581018301518582016040015282016119e3565b81811115611a105783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f6163746f722063616e6e6f7420696e6372656d656e7420726f756e6400000000604082015260600190565b60208082526014908201527314dd58905b1b1bd8ce881d5b995c5d585b08125160621b604082015260600190565b60208082526010908201526f30b1ba37b9103737ba1039b4b3b732b960811b604082015260600190565b6020808252601690820152756163746f722063616e6e6f7420736b6970206c6f737360501b604082015260600190565b6020808252600d908201526c1c9bdd5b990818da185b99d959609a1b604082015260600190565b6020808252600a90820152693732bc3a1030b1ba37b960b11b604082015260600190565b6020808252600a908201526966696e616c20666c616760b01b604082015260600190565b6020808252601b908201527f75696e743235365b5d5b5d3a20756e657175616c206c656e6774680000000000604082015260600190565b6020808252601690820152756e756d626572206f66207061727469636970616e747360501b604082015260600190565b6020808252600b908201526a0c8c2e8c240d8cadccee8d60ab1b604082015260600190565b60208082526018908201527f6163746f722063616e6e6f7420736b6970207765696768740000000000000000604082015260600190565b6020808252601a908201527f6163746f722063616e6e6f7420736b6970206163637572616379000000000000604082015260600190565b6020808252601a908201527f537562416c6c6f635b5d3a20756e657175616c206c656e677468000000000000604082015260600190565b6020808252600d908201526c1b5bd9195b0818da185b99d959609a1b604082015260600190565b6000808335601e19843603018112611cc2578283fd5b83018035915067ffffffffffffffff821115611cdc578283fd5b6020908101925081023603821315611cf357600080fd5b9250929050565b6000808335601e19843603018112611d10578283fd5b83018035915067ffffffffffffffff821115611d2a578283fd5b602001915036819003821315611cf357600080fd5b60008235605e19833603018112611d54578182fd5b9190910192915050565b60405181810167ffffffffffffffff81118282101715611d7a57fe5b604052919050565b600067ffffffffffffffff821115611d9657fe5b5060209081020190565b60008085851115611daf578182fd5b83861115611dbb578182fd5b5050820193919092039150565b6000611dd661153684611d82565b8381526020808201919084845b87811015611e0a57611df83683358901611591565b85529382019390820190600101611de3565b50919695505050505050565b6000611e2461153684611d82565b8381526020808201919084845b87811015611e0a57813587016060808236031215611e4d578788fd5b604080519182019167ffffffffffffffff8084118285101715611e6c57fe5b92825283358152868401359280841115611e84578a8bfd5b611e9036858701611591565b8883015282850135935080841115611ea6578a8bfd5b50611eb336848601611516565b91810191909152875250509382019390820190600101611e3156fea2646970667358221220faec8d05660b2e86568fd4ff8c5462bada38d4189683e72a94d72329b640f86964736f6c63430007060033",
}

// FLAppABI is the input ABI used to generate the binding from.
// Deprecated: Use FLAppMetaData.ABI instead.
var FLAppABI = FLAppMetaData.ABI

// FLAppBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FLAppMetaData.Bin instead.
var FLAppBin = FLAppMetaData.Bin

// DeployFLApp deploys a new Ethereum contract, binding an instance of FLApp to it.
func DeployFLApp(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *FLApp, error) {
	parsed, err := FLAppMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FLAppBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FLApp{FLAppCaller: FLAppCaller{contract: contract}, FLAppTransactor: FLAppTransactor{contract: contract}, FLAppFilterer: FLAppFilterer{contract: contract}}, nil
}

// FLApp is an auto generated Go binding around an Ethereum contract.
type FLApp struct {
	FLAppCaller     // Read-only binding to the contract
	FLAppTransactor // Write-only binding to the contract
	FLAppFilterer   // Log filterer for contract events
}

// FLAppCaller is an auto generated read-only Go binding around an Ethereum contract.
type FLAppCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FLAppTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FLAppTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FLAppFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FLAppFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FLAppSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FLAppSession struct {
	Contract     *FLApp            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// FLAppCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FLAppCallerSession struct {
	Contract *FLAppCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// FLAppTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FLAppTransactorSession struct {
	Contract     *FLAppTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// FLAppRaw is an auto generated low-level Go binding around an Ethereum contract.
type FLAppRaw struct {
	Contract *FLApp // Generic contract binding to access the raw methods on
}

// FLAppCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FLAppCallerRaw struct {
	Contract *FLAppCaller // Generic read-only contract binding to access the raw methods on
}

// FLAppTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FLAppTransactorRaw struct {
	Contract *FLAppTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFLApp creates a new instance of FLApp, bound to a specific deployed contract.
func NewFLApp(address common.Address, backend bind.ContractBackend) (*FLApp, error) {
	contract, err := bindFLApp(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FLApp{FLAppCaller: FLAppCaller{contract: contract}, FLAppTransactor: FLAppTransactor{contract: contract}, FLAppFilterer: FLAppFilterer{contract: contract}}, nil
}

// NewFLAppCaller creates a new read-only instance of FLApp, bound to a specific deployed contract.
func NewFLAppCaller(address common.Address, caller bind.ContractCaller) (*FLAppCaller, error) {
	contract, err := bindFLApp(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FLAppCaller{contract: contract}, nil
}

// NewFLAppTransactor creates a new write-only instance of FLApp, bound to a specific deployed contract.
func NewFLAppTransactor(address common.Address, transactor bind.ContractTransactor) (*FLAppTransactor, error) {
	contract, err := bindFLApp(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FLAppTransactor{contract: contract}, nil
}

// NewFLAppFilterer creates a new log filterer instance of FLApp, bound to a specific deployed contract.
func NewFLAppFilterer(address common.Address, filterer bind.ContractFilterer) (*FLAppFilterer, error) {
	contract, err := bindFLApp(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FLAppFilterer{contract: contract}, nil
}

// bindFLApp binds a generic wrapper to an already deployed contract.
func bindFLApp(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := FLAppMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FLApp *FLAppRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FLApp.Contract.FLAppCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FLApp *FLAppRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FLApp.Contract.FLAppTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FLApp *FLAppRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FLApp.Contract.FLAppTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FLApp *FLAppCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FLApp.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FLApp *FLAppTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FLApp.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FLApp *FLAppTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FLApp.Contract.contract.Transact(opts, method, params...)
}

// ValidTransition is a free data retrieval call binding the contract method 0x0d1feb4f.
//
// Solidity: function validTransition((uint256,uint256,address[],address,bool,bool) params, (bytes32,uint64,(address[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) from, (bytes32,uint64,(address[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) to, uint256 signerIdx) pure returns()
func (_FLApp *FLAppCaller) ValidTransition(opts *bind.CallOpts, params ChannelParams, from ChannelState, to ChannelState, signerIdx *big.Int) error {
	var out []interface{}
	err := _FLApp.contract.Call(opts, &out, "validTransition", params, from, to, signerIdx)

	if err != nil {
		return err
	}

	return err

}

// ValidTransition is a free data retrieval call binding the contract method 0x0d1feb4f.
//
// Solidity: function validTransition((uint256,uint256,address[],address,bool,bool) params, (bytes32,uint64,(address[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) from, (bytes32,uint64,(address[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) to, uint256 signerIdx) pure returns()
func (_FLApp *FLAppSession) ValidTransition(params ChannelParams, from ChannelState, to ChannelState, signerIdx *big.Int) error {
	return _FLApp.Contract.ValidTransition(&_FLApp.CallOpts, params, from, to, signerIdx)
}

// ValidTransition is a free data retrieval call binding the contract method 0x0d1feb4f.
//
// Solidity: function validTransition((uint256,uint256,address[],address,bool,bool) params, (bytes32,uint64,(address[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) from, (bytes32,uint64,(address[],uint256[][],(bytes32,uint256[],uint16[])[]),bytes,bool) to, uint256 signerIdx) pure returns()
func (_FLApp *FLAppCallerSession) ValidTransition(params ChannelParams, from ChannelState, to ChannelState, signerIdx *big.Int) error {
	return _FLApp.Contract.ValidTransition(&_FLApp.CallOpts, params, from, to, signerIdx)
}
